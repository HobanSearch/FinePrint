# MLflow Model Registry for AI/ML Artifact Storage and Experiment Tracking
apiVersion: v1
kind: ConfigMap
metadata:
  name: mlflow-config
  namespace: fineprintai-prod
  labels:
    app.kubernetes.io/name: mlflow
    app.kubernetes.io/component: model-registry
data:
  MLFLOW_BACKEND_STORE_URI: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres-service:5432/mlflow"
  MLFLOW_DEFAULT_ARTIFACT_ROOT: "s3://fineprintai-mlflow/artifacts"
  MLFLOW_S3_ENDPOINT_URL: "https://s3.amazonaws.com"
  MLFLOW_TRACKING_URI: "http://mlflow-service:5000"
  MLFLOW_SERVE_ARTIFACTS: "true"
  MLFLOW_ARTIFACTS_DESTINATION: "/mlflow/artifacts"

---
# MLflow Tracking Server Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow-tracking-server
  namespace: fineprintai-prod
  labels:
    app.kubernetes.io/name: mlflow
    app.kubernetes.io/component: tracking-server
    app.kubernetes.io/part-of: aiml-platform
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: mlflow
      app.kubernetes.io/component: tracking-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mlflow
        app.kubernetes.io/component: tracking-server
        app.kubernetes.io/part-of: aiml-platform
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: fineprintai-mlflow
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      initContainers:
      - name: db-migration
        image: mlflow/mlflow:2.8.1
        command:
          - sh
          - -c
          - |
            echo "Running MLflow database migration..."
            mlflow db upgrade $MLFLOW_BACKEND_STORE_URI
        env:
        - name: MLFLOW_BACKEND_STORE_URI
          valueFrom:
            secretKeyRef:
              name: mlflow-secrets
              key: MLFLOW_BACKEND_STORE_URI
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
      containers:
      - name: mlflow-server
        image: mlflow/mlflow:2.8.1
        imagePullPolicy: Always
        command:
          - mlflow
          - server
          - --backend-store-uri
          - $(MLFLOW_BACKEND_STORE_URI)
          - --default-artifact-root
          - $(MLFLOW_DEFAULT_ARTIFACT_ROOT)
          - --host
          - "0.0.0.0"
          - --port
          - "5000"
          - --serve-artifacts
          - --artifacts-destination
          - $(MLFLOW_ARTIFACTS_DESTINATION)
        ports:
        - name: http
          containerPort: 5000
          protocol: TCP
        env:
        - name: MLFLOW_BACKEND_STORE_URI
          valueFrom:
            secretKeyRef:
              name: mlflow-secrets
              key: MLFLOW_BACKEND_STORE_URI
        - name: MLFLOW_DEFAULT_ARTIFACT_ROOT
          valueFrom:
            configMapKeyRef:
              name: mlflow-config
              key: MLFLOW_DEFAULT_ARTIFACT_ROOT
        - name: MLFLOW_ARTIFACTS_DESTINATION
          valueFrom:
            configMapKeyRef:
              name: mlflow-config
              key: MLFLOW_ARTIFACTS_DESTINATION
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: fineprintai-secrets
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: fineprintai-secrets
              key: AWS_SECRET_ACCESS_KEY
        - name: AWS_DEFAULT_REGION
          valueFrom:
            configMapKeyRef:
              name: fineprintai-config
              key: AWS_REGION
        # Legal AI specific environment
        - name: MLFLOW_EXPERIMENT_NAME
          value: "legal-document-analysis"
        - name: MLFLOW_TRACKING_INSECURE_TLS
          value: "false"
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2
            memory: 4Gi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false  # MLflow needs write access for artifacts
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
              - ALL
        volumeMounts:
        - name: mlflow-artifacts
          mountPath: /mlflow/artifacts
        - name: tmp-volume
          mountPath: /tmp
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 30
      volumes:
      - name: mlflow-artifacts
        persistentVolumeClaim:
          claimName: mlflow-artifacts-pvc
      - name: tmp-volume
        emptyDir:
          sizeLimit: 1Gi
      nodeSelector:
        node-type: compute-optimized
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - tracking-server
              topologyKey: kubernetes.io/hostname

---
# MLflow Model Registry Service
apiVersion: v1
kind: Service
metadata:
  name: mlflow-service
  namespace: fineprintai-prod
  labels:
    app.kubernetes.io/name: mlflow
    app.kubernetes.io/component: tracking-server
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 5000
    targetPort: 5000
    protocol: TCP
  selector:
    app.kubernetes.io/name: mlflow
    app.kubernetes.io/component: tracking-server

---
# MLflow Artifacts PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mlflow-artifacts-pvc
  namespace: fineprintai-prod
  labels:
    app.kubernetes.io/name: mlflow
    app.kubernetes.io/component: storage
spec:
  accessModes:
    - ReadWriteMany  # Multiple pods may access artifacts
  storageClassName: efs-sc  # Use EFS for shared storage
  resources:
    requests:
      storage: 1Ti  # Large storage for models and artifacts

---
# MLflow UI Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mlflow-ingress
  namespace: fineprintai-prod
  labels:
    app.kubernetes.io/name: mlflow
    app.kubernetes.io/component: ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: mlflow-basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "MLflow Model Registry - Authentication Required"
spec:
  tls:
  - hosts:
    - mlflow.fineprintai.com
    secretName: mlflow-tls-cert
  rules:
  - host: mlflow.fineprintai.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mlflow-service
            port:
              number: 5000

---
# MLflow Model Serving Deployment (for inference)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow-model-server
  namespace: fineprintai-prod
  labels:
    app.kubernetes.io/name: mlflow
    app.kubernetes.io/component: model-server
    app.kubernetes.io/part-of: aiml-platform
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: mlflow
      app.kubernetes.io/component: model-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mlflow
        app.kubernetes.io/component: model-server
        app.kubernetes.io/part-of: aiml-platform
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: fineprintai-mlflow
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: model-server
        image: mlflow/mlflow:2.8.1
        imagePullProperty: Always
        command:
          - mlflow
          - models
          - serve
          - --model-uri
          - $(MODEL_URI)
          - --host
          - "0.0.0.0"
          - --port
          - "8080"
          - --enable-mlserver
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        env:
        - name: MODEL_URI
          valueFrom:
            configMapKeyRef:
              name: mlflow-model-config
              key: MODEL_URI
        - name: MLFLOW_TRACKING_URI
          valueFrom:
            configMapKeyRef:
              name: mlflow-config
              key: MLFLOW_TRACKING_URI
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: fineprintai-secrets
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: fineprintai-secrets
              key: AWS_SECRET_ACCESS_KEY
        # Model serving specific configuration
        - name: MLFLOW_DISABLE_ENV_CREATION
          value: "true"
        - name: MLFLOW_SERVER_REQUEST_TIMEOUT
          value: "300"
        resources:
          requests:
            cpu: 1
            memory: 2Gi
          limits:
            cpu: 4
            memory: 8Gi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
              - ALL
        volumeMounts:
        - name: model-cache
          mountPath: /mlflow/model-cache
        - name: tmp-volume
          mountPath: /tmp
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 3
      volumes:
      - name: model-cache
        emptyDir:
          sizeLimit: 10Gi
      - name: tmp-volume
        emptyDir:
          sizeLimit: 1Gi
      nodeSelector:
        node-type: compute-optimized
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - model-server
              topologyKey: kubernetes.io/hostname

---
# MLflow Model Server Service
apiVersion: v1
kind: Service
metadata:
  name: mlflow-model-service
  namespace: fineprintai-prod
  labels:
    app.kubernetes.io/name: mlflow
    app.kubernetes.io/component: model-server
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app.kubernetes.io/name: mlflow
    app.kubernetes.io/component: model-server

---
# MLflow Model Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: mlflow-model-config
  namespace: fineprintai-prod
  labels:
    app.kubernetes.io/name: mlflow
    app.kubernetes.io/component: model-config
data:
  MODEL_URI: "models:/legal-document-analyzer/Production"
  MODEL_NAME: "legal-document-analyzer"
  MODEL_STAGE: "Production"
  MODEL_VERSION: "latest"

---
# HorizontalPodAutoscaler for MLflow Model Server
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mlflow-model-server-hpa
  namespace: fineprintai-prod
  labels:
    app.kubernetes.io/name: mlflow
    app.kubernetes.io/component: autoscaling
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mlflow-model-server
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: inference_requests_per_second
      target:
        type: AverageValue
        averageValue: "100"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Pods
        value: 2
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Pods
        value: 4
        periodSeconds: 60