apiVersion: apps/v1
kind: Deployment
metadata:
  name: ab-testing-service
  namespace: fineprint
  labels:
    app: ab-testing
    component: backend
    tier: service
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: ab-testing
  template:
    metadata:
      labels:
        app: ab-testing
        component: backend
        tier: service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3005"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: ab-testing-sa
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - ab-testing
              topologyKey: kubernetes.io/hostname
      containers:
      - name: ab-testing
        image: fineprint/ab-testing:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3005
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3005"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: ab-testing-secrets
              key: database-url
        - name: REDIS_HOST
          value: "redis-service.fineprint.svc.cluster.local"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secrets
              key: password
        - name: MODEL_SERVICE_URL
          value: "http://model-management-service:3004"
        - name: LOG_LEVEL
          value: "info"
        - name: CORS_ORIGIN
          value: "https://app.fineprintai.com,http://localhost:3000"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3005
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3005
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: ab-testing-config
---
apiVersion: v1
kind: Service
metadata:
  name: ab-testing-service
  namespace: fineprint
  labels:
    app: ab-testing
    component: backend
spec:
  type: ClusterIP
  selector:
    app: ab-testing
  ports:
  - port: 3005
    targetPort: 3005
    protocol: TCP
    name: http
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ab-testing-sa
  namespace: fineprint
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ab-testing-config
  namespace: fineprint
data:
  experiments.json: |
    {
      "defaultConfidence": 0.95,
      "defaultPower": 0.8,
      "minimumSampleSize": 100,
      "maximumExperimentDuration": 90,
      "automationRules": [
        {
          "name": "early_stop_success",
          "condition": "pValue < 0.05 AND effectSize > 0.1 AND sampleSize > 1000",
          "action": "stop_success",
          "priority": 10,
          "enabled": true
        },
        {
          "name": "early_stop_failure",
          "condition": "pValue > 0.5 AND sampleSize > 5000",
          "action": "stop_failure",
          "priority": 5,
          "enabled": true
        }
      ]
    }
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ab-testing-hpa
  namespace: fineprint
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ab-testing-service
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: ab-testing-pdb
  namespace: fineprint
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: ab-testing
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ab-testing-network-policy
  namespace: fineprint
spec:
  podSelector:
    matchLabels:
      app: ab-testing
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: fineprint
    - podSelector:
        matchLabels:
          app: gateway
    ports:
    - protocol: TCP
      port: 3005
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: fineprint
    ports:
    - protocol: TCP
      port: 5432  # PostgreSQL
    - protocol: TCP
      port: 6379  # Redis
    - protocol: TCP
      port: 3004  # Model Management Service
  - to:
    - namespaceSelector: {}
      podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - protocol: UDP
      port: 53