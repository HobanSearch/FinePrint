apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: fineprintai-monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: server
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/component: server
    spec:
      serviceAccountName: grafana
      containers:
        - name: grafana
          image: grafana/grafana:10.2.2
          ports:
            - containerPort: 3000
              name: http
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-credentials
                  key: admin-password
            - name: GF_INSTALL_PLUGINS
              value: "grafana-piechart-panel,grafana-worldmap-panel,redis-datasource,postgres-datasource"
            - name: GF_SERVER_ROOT_URL
              value: "https://grafana.fineprintai.com"
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 5
          volumeMounts:
            - name: storage-volume
              mountPath: /var/lib/grafana
            - name: config-volume
              mountPath: /etc/grafana/provisioning
            - name: dashboards-volume
              mountPath: /var/lib/grafana/dashboards
      volumes:
        - name: storage-volume
          persistentVolumeClaim:
            claimName: grafana-pvc
        - name: config-volume
          configMap:
            name: grafana-config
        - name: dashboards-volume
          configMap:
            name: grafana-dashboards

---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: fineprintai-monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: server
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      name: http
  selector:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: server

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: fineprintai-monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: server
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: ssd
  resources:
    requests:
      storage: 10Gi

---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-credentials
  namespace: fineprintai-monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: server
type: Opaque
stringData:
  admin-password: "admin123-change-in-production"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: fineprintai-monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: server
data:
  datasources.yml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus-service:9090
        isDefault: true
        editable: true
      - name: Loki
        type: loki
        access: proxy
        url: http://loki-service:3100
        editable: true
      - name: Jaeger
        type: jaeger
        access: proxy
        url: http://jaeger-service:16686
        editable: true
        jsonData:
          tracesToLogs:
            datasourceUid: 'loki'
            tags: ['job', 'instance', 'pod', 'namespace']
            mappedTags: [{ key: 'service.name', value: 'service' }]
            mapTagNamesEnabled: false
            spanStartTimeShift: '1h'
            spanEndTimeShift: '1h'
            filterByTraceID: false
            filterBySpanID: false

  dashboards.yml: |
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        allowUiUpdates: true
        options:
          path: /var/lib/grafana/dashboards

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: fineprintai-monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: dashboards
data:
  fineprintai-overview.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Fine Print AI - Overview",
        "tags": ["fineprintai"],
        "style": "dark",
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "API Response Time",
            "type": "stat",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job=\"fineprintai-api\"}[5m]))",
                "legendFormat": "95th percentile"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "s",
                "thresholds": {
                  "steps": [
                    {"color": "green", "value": null},
                    {"color": "yellow", "value": 0.5},
                    {"color": "red", "value": 1.0}
                  ]
                }
              }
            },
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "Request Rate",
            "type": "stat",
            "targets": [
              {
                "expr": "rate(http_requests_total{job=\"fineprintai-api\"}[5m])",
                "legendFormat": "Requests/sec"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "reqps"
              }
            },
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0}
          },
          {
            "id": 3,
            "title": "Error Rate",
            "type": "stat",
            "targets": [
              {
                "expr": "rate(http_requests_total{job=\"fineprintai-api\",status=~\"5..\"}[5m]) / rate(http_requests_total{job=\"fineprintai-api\"}[5m])",
                "legendFormat": "Error Rate"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "percentunit",
                "thresholds": {
                  "steps": [
                    {"color": "green", "value": null},
                    {"color": "yellow", "value": 0.01},
                    {"color": "red", "value": 0.05}
                  ]
                }
              }
            },
            "gridPos": {"h": 8, "w": 24, "x": 0, "y": 8}
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "5s"
      }
    }

  kubernetes-overview.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Kubernetes - Overview",
        "tags": ["kubernetes"],
        "style": "dark",
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "CPU Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(container_cpu_usage_seconds_total{pod=~\".*fineprintai.*\"}[5m])",
                "legendFormat": "{{pod}}"
              }
            ],
            "yAxes": [
              {"unit": "percentunit", "max": 1, "min": 0}
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "Memory Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "container_memory_usage_bytes{pod=~\".*fineprintai.*\"} / container_spec_memory_limit_bytes",
                "legendFormat": "{{pod}}"
              }
            ],
            "yAxes": [
              {"unit": "percentunit", "max": 1, "min": 0}
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0}
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "30s"
      }
    }