import React from 'react'\nimport { View, Text, StyleSheet, ViewStyle, TextStyle } from 'react-native'\nimport { colors, typography, spacing, borderRadius } from '@/constants/theme'\n\ninterface BadgeProps {\n  count: number\n  maxCount?: number\n  size?: 'small' | 'medium' | 'large'\n  variant?: 'primary' | 'secondary' | 'danger' | 'success' | 'warning'\n  style?: ViewStyle\n  textStyle?: TextStyle\n  showZero?: boolean\n}\n\nexport const Badge: React.FC<BadgeProps> = ({\n  count,\n  maxCount = 99,\n  size = 'medium',\n  variant = 'danger',\n  style,\n  textStyle,\n  showZero = false\n}) => {\n  if (count === 0 && !showZero) {\n    return null\n  }\n\n  const displayCount = count > maxCount ? `${maxCount}+` : count.toString()\n  \n  const sizeStyles = getSizeStyles(size)\n  const variantStyles = getVariantStyles(variant)\n\n  return (\n    <View style={[styles.badge, sizeStyles.container, variantStyles.container, style]}>\n      <Text style={[styles.text, sizeStyles.text, variantStyles.text, textStyle]}>\n        {displayCount}\n      </Text>\n    </View>\n  )\n}\n\nfunction getSizeStyles(size: 'small' | 'medium' | 'large') {\n  switch (size) {\n    case 'small':\n      return {\n        container: {\n          minWidth: 16,\n          height: 16,\n          paddingHorizontal: 4,\n        },\n        text: {\n          fontSize: 10,\n          lineHeight: 12,\n        }\n      }\n    case 'large':\n      return {\n        container: {\n          minWidth: 24,\n          height: 24,\n          paddingHorizontal: 8,\n        },\n        text: {\n          fontSize: 14,\n          lineHeight: 16,\n        }\n      }\n    default: // medium\n      return {\n        container: {\n          minWidth: 20,\n          height: 20,\n          paddingHorizontal: 6,\n        },\n        text: {\n          fontSize: 12,\n          lineHeight: 14,\n        }\n      }\n  }\n}\n\nfunction getVariantStyles(variant: 'primary' | 'secondary' | 'danger' | 'success' | 'warning') {\n  switch (variant) {\n    case 'primary':\n      return {\n        container: { backgroundColor: colors.primary[600] },\n        text: { color: '#ffffff' }\n      }\n    case 'secondary':\n      return {\n        container: { backgroundColor: colors.secondary[600] },\n        text: { color: '#ffffff' }\n      }\n    case 'success':\n      return {\n        container: { backgroundColor: colors.success[600] },\n        text: { color: '#ffffff' }\n      }\n    case 'warning':\n      return {\n        container: { backgroundColor: colors.warning[600] },\n        text: { color: '#ffffff' }\n      }\n    default: // danger\n      return {\n        container: { backgroundColor: colors.danger[600] },\n        text: { color: '#ffffff' }\n      }\n  }\n}\n\nconst styles = StyleSheet.create({\n  badge: {\n    borderRadius: borderRadius.full,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {\n    fontWeight: '600',\n    textAlign: 'center',\n  }\n})"