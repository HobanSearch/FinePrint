version: '3.8'

networks:
  fineprintai-backend:
    external: true

services:
  agent-orchestration:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:password@postgres:5432/fineprintai
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-development-secret-key}
      LOG_LEVEL: info
      ORCHESTRATION_PORT: 3010
      CORS_ORIGINS: "http://localhost:3000,https://app.fineprint.ai"
      # Rate limiting
      RATE_LIMIT_ENABLED: "true"
      RATE_LIMIT_MAX: "100"
      RATE_LIMIT_TIME_WINDOW: "60000"
      # Documentation
      DOCS_ENABLED: "true"
      DOCS_PATH: "/docs"
    ports:
      - "3010:3010"
    networks:
      - fineprintai-backend
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3010/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s
    volumes:
      # Mount for development (optional - remove for production)
      - ./logs:/app/logs:rw
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # External services (should be running from main backend compose)
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: fineprintai
    ports:
      - "5432:5432"
    networks:
      - fineprintai-backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    networks:
      - fineprintai-backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5