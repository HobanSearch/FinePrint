import { EventEmitter } from 'events';
import { Queue } from 'bullmq';
import { Message, MessageRoute, MessageQueue, MessageBus, MessageHandler, CommunicationProtocol, MessageMetrics, MessageChannel } from '@/types/communication';
export declare class CommunicationBus extends EventEmitter implements MessageBus {
    private redis;
    private queues;
    private workers;
    private subscribers;
    private routes;
    private channels;
    private pendingRequests;
    private messageMetrics;
    private encryptionKey;
    private protocol;
    constructor();
    initialize(): Promise<void>;
    stop(): Promise<void>;
    publish(message: Message): Promise<void>;
    subscribe(pattern: string, handler: MessageHandler): Promise<void>;
    unsubscribe(pattern: string, handler: MessageHandler): Promise<void>;
    request(message: Message, timeout?: number): Promise<Message>;
    broadcast(message: Omit<Message, 'to'>): Promise<void>;
    createQueue(name: string, options?: Partial<MessageQueue>): Promise<void>;
    private createQueueWorker;
    private createSubscriberWorker;
    private processIncomingMessage;
    private handleResponse;
    private handleEvent;
    private handleNotification;
    private handleBroadcast;
    private processMessage;
    private compressMessage;
    private encryptMessage;
    private decryptMessage;
    private applyRoutes;
    private matchesRoute;
    private applyTransformation;
    private passesFilter;
    private validateMessage;
    private matchesPattern;
    private getQueueForMessage;
    private getPriorityScore;
    private recordMessageMetric;
    private setupDefaultRoutes;
    private setupDefaultChannels;
    private startMetricsCollection;
    private calculateThroughput;
    private calculateErrorRate;
    getQueues(): Map<string, Queue>;
    getRoutes(): Map<string, MessageRoute>;
    getChannels(): Map<string, MessageChannel>;
    getMetrics(): Map<string, MessageMetrics>;
    getProtocol(): CommunicationProtocol;
}
//# sourceMappingURL=communication-bus.d.ts.map