// This is your Prisma schema file for notification service
// Learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User preferences for notifications
model NotificationPreference {
  id        String   @id @default(cuid())
  userId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Channel preferences
  emailEnabled     Boolean @default(true)
  pushEnabled      Boolean @default(true)
  inAppEnabled     Boolean @default(true)
  webhookEnabled   Boolean @default(false)
  webhookUrl       String?
  webhookSecret    String?

  // Content preferences
  analysisComplete    Boolean @default(true)
  documentChanges     Boolean @default(true)
  highRiskFindings    Boolean @default(true)
  weeklySummary       Boolean @default(true)
  marketingEmails     Boolean @default(false)
  securityAlerts      Boolean @default(true)
  billingUpdates      Boolean @default(true)
  systemMaintenance   Boolean @default(true)

  // Timing preferences
  quietHoursEnabled Boolean @default(false)
  quietHoursStart   String? // Format: "HH:mm"
  quietHoursEnd     String? // Format: "HH:mm"
  timezone          String  @default("UTC")

  // Frequency preferences for batching
  batchingEnabled   Boolean @default(false)
  batchingInterval  Int     @default(60) // minutes
  maxBatchSize      Int     @default(10)

  // GDPR compliance
  consentGiven      Boolean   @default(false)
  consentDate       DateTime?
  optOutDate        DateTime?
  dataRetentionDays Int       @default(365)

  @@map("notification_preferences")
}

// Notification templates
model NotificationTemplate {
  id          String   @id @default(cuid())
  name        String   @unique
  type        String   // email, push, webhook, etc.
  category    String   // transactional, marketing, system
  subject     String?
  content     String
  htmlContent String?
  variables   Json?    // Template variables schema
  isActive    Boolean  @default(true)
  version     Int      @default(1)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // A/B testing
  isAbTest        Boolean @default(false)
  abTestGroup     String? // A, B, C, etc.
  abTestWeight    Int     @default(100) // Percentage weight
  abTestStartDate DateTime?
  abTestEndDate   DateTime?

  // Usage tracking
  sentCount    Int @default(0)
  openCount    Int @default(0)
  clickCount   Int @default(0)
  unsubscribed Int @default(0)

  notifications Notification[]

  @@map("notification_templates")
}

// Individual notifications
model Notification {
  id        String   @id @default(cuid())
  userId    String
  type      String   // analysis_complete, document_changed, etc.
  category  String   // transactional, marketing, system
  priority  String   @default("normal") // low, normal, high, urgent
  status    String   @default("pending") // pending, sent, delivered, failed, read
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Content
  title     String
  message   String
  data      Json?
  actionUrl String?
  imageUrl  String?
  iconUrl   String?

  // Scheduling
  scheduledAt DateTime?
  expiresAt   DateTime?
  readAt      DateTime?
  
  // Template reference
  templateId String?
  template   NotificationTemplate? @relation(fields: [templateId], references: [id])

  // Delivery tracking
  channels NotificationDelivery[]

  // A/B testing
  abTestGroup String?
  abTestId    String?

  @@index([userId, status])
  @@index([type, createdAt])
  @@index([priority, status])
  @@index([scheduledAt])
  @@map("notifications")
}

// Delivery tracking per channel
model NotificationDelivery {
  id             String   @id @default(cuid())
  notificationId String
  notification   Notification @relation(fields: [notificationId], references: [id], onDelete: Cascade)
  
  channel        String   // email, push, webhook, etc.
  status         String   @default("pending") // pending, sent, delivered, failed, bounced, opened, clicked
  attempts       Int      @default(0)
  maxAttempts    Int      @default(3)
  
  // External tracking
  providerId     String?  // SendGrid message ID, etc.
  providerStatus String?
  
  // Delivery details
  sentAt         DateTime?
  deliveredAt    DateTime?
  failedAt       DateTime?
  openedAt       DateTime?
  clickedAt      DateTime?
  
  // Error tracking
  errorCode      String?
  errorMessage   String?
  lastAttemptAt  DateTime?
  nextRetryAt    DateTime?
  
  // Webhook specific
  webhookUrl     String?
  webhookStatus  Int?     // HTTP status code
  
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index([channel, status])
  @@index([providerId])
  @@index([nextRetryAt])
  @@map("notification_deliveries")
}

// Email templates with MJML support
model EmailTemplate {
  id          String   @id @default(cuid())
  name        String   @unique
  subject     String
  mjmlContent String   // MJML template
  htmlContent String   // Compiled HTML
  textContent String?  // Plain text version
  variables   Json?    // Template variables schema
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // SendGrid specific
  sendgridId String?
  
  // Usage tracking
  sentCount    Int @default(0)
  openRate     Float @default(0)
  clickRate    Float @default(0)
  bounceRate   Float @default(0)
  
  @@map("email_templates")
}

// Unsubscribe tracking for GDPR compliance
model UnsubscribeRecord {
  id        String   @id @default(cuid())
  userId    String
  email     String
  type      String   // all, marketing, transactional
  reason    String?
  source    String   // email_link, preferences_page, api
  ipAddress String?
  userAgent String?
  createdAt DateTime @default(now())

  @@index([userId])
  @@index([email])
  @@map("unsubscribe_records")
}

// Notification analytics and metrics
model NotificationMetrics {
  id        String   @id @default(cuid())
  date      DateTime @db.Date
  type      String   // notification type
  channel   String   // delivery channel
  
  // Counts
  sent      Int @default(0)
  delivered Int @default(0)
  opened    Int @default(0)
  clicked   Int @default(0)
  failed    Int @default(0)
  bounced   Int @default(0)
  
  // Rates (calculated)
  deliveryRate Float @default(0)
  openRate     Float @default(0)
  clickRate    Float @default(0)
  bounceRate   Float @default(0)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([date, type, channel])
  @@index([date])
  @@map("notification_metrics")
}

// A/B test configurations
model AbTestConfig {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  status      String   @default("draft") // draft, running, completed, paused
  
  // Test configuration
  testType    String   // subject, content, timing, channel
  variants    Json     // Array of test variants
  trafficSplit Json    // Percentage split between variants
  
  // Targeting
  userSegment Json?    // User targeting criteria
  
  // Duration
  startDate   DateTime?
  endDate     DateTime?
  
  // Success metrics
  primaryMetric   String @default("open_rate") // open_rate, click_rate, conversion_rate
  secondaryMetrics Json? // Additional metrics to track
  
  // Results
  winner       String? // Winning variant
  confidence   Float?  // Statistical confidence
  results      Json?   // Detailed results
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([status])
  @@index([startDate, endDate])
  @@map("ab_test_configs")
}

// Notification queues for batching and prioritization
model NotificationQueue {
  id          String   @id @default(cuid())
  userId      String
  priority    String   @default("normal") // low, normal, high, urgent
  scheduledAt DateTime @default(now())
  status      String   @default("pending") // pending, processing, completed, failed
  
  // Notification data
  notifications Json   // Array of notification IDs or full notification data
  batchSize     Int    @default(1)
  
  // Processing tracking
  attempts      Int    @default(0)
  maxAttempts   Int    @default(3)
  lastAttemptAt DateTime?
  nextRetryAt   DateTime?
  completedAt   DateTime?
  
  // Error tracking
  errorMessage  String?
  errorDetails  Json?
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId, status])
  @@index([priority, scheduledAt])
  @@index([nextRetryAt])
  @@map("notification_queues")
}