version: '3.8'

services:
  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.15-community
    container_name: fineprintai-neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      NEO4J_AUTH: neo4j/fineprintai2024
      NEO4J_PLUGINS: '["apoc", "graph-data-science"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*,gds.*
      NEO4J_dbms_security_procedures_allowlist: apoc.*,gds.*
      NEO4J_dbms_memory_heap_initial__size: 512m
      NEO4J_dbms_memory_heap_max__size: 2G
      NEO4J_dbms_memory_pagecache_size: 1G
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_plugins:/plugins
    networks:
      - fineprintai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p fineprintai2024 'RETURN 1'"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:v1.7.4
    container_name: fineprintai-qdrant
    ports:
      - "6333:6333"  # HTTP API
      - "6334:6334"  # gRPC API
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334
      QDRANT__LOG_LEVEL: INFO
    volumes:
      - qdrant_storage:/qdrant/storage
    networks:
      - fineprintai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:6333/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: fineprintai-redis
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: fineprintai2024
    command: redis-server --requirepass fineprintai2024 --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - fineprintai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli --no-auth-warning -a fineprintai2024 ping | grep PONG"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Knowledge Graph Service
  knowledge-graph:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: fineprintai-knowledge-graph
    ports:
      - "3007:3007"
    environment:
      NODE_ENV: development
      PORT: 3007
      LOG_LEVEL: debug
      
      # Database Configuration
      NEO4J_URL: bolt://neo4j:7687
      NEO4J_USERNAME: neo4j
      NEO4J_PASSWORD: fineprintai2024
      NEO4J_DATABASE: neo4j
      
      # Vector Database
      QDRANT_URL: http://qdrant:6333
      
      # Cache
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: fineprintai2024
      REDIS_DATABASE: 5
      
      # External Services
      DSPY_SERVICE_URL: http://host.docker.internal:3004
      
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - fineprintai-network
    depends_on:
      neo4j:
        condition: service_healthy
      qdrant:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: npm run dev

volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_plugins:
    driver: local
  qdrant_storage:
    driver: local
  redis_data:
    driver: local

networks:
  fineprintai-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16