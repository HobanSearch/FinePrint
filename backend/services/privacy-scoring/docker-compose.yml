version: '3.8'

services:
  privacy-scoring:
    build: .
    ports:
      - "3007:3007"
    environment:
      - NODE_ENV=development
      - PORT=3007
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/fineprint
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=password
      - DOCUMENT_ANALYSIS_URL=http://document-analysis:3003
    depends_on:
      - postgres
      - redis
      - neo4j
    networks:
      - fineprint-network
    volumes:
      - ./src:/app/src
      - ./config:/app/config

  privacy-scoring-worker:
    build: .
    command: ["node", "dist/workers/index.js"]
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/fineprint
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=password
      - DOCUMENT_ANALYSIS_URL=http://document-analysis:3003
      - WORKER_CONCURRENCY=5
    depends_on:
      - postgres
      - redis
      - neo4j
    networks:
      - fineprint-network
    volumes:
      - ./src:/app/src
      - ./config:/app/config

  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=fineprint
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - fineprint-network

  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    networks:
      - fineprint-network

  neo4j:
    image: neo4j:5-community
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_dbms_memory_pagecache_size=512M
      - NEO4J_dbms_memory_heap_max__size=512M
    volumes:
      - neo4j-data:/data
    networks:
      - fineprint-network

volumes:
  postgres-data:
  neo4j-data:

networks:
  fineprint-network:
    driver: bridge